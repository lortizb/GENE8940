#PBS -S /bin/bash
#PBS -q batch
#PBS -N jobname
#PBS -l nodes=1:ppn=16
#PBS -l walltime=48:00:00
#PBS -l mem=8gb
#PBS --output=log.%j
#PBS --output=/scratch/lo50936/Data_analysis/Nanopore/Data_analysis/log.%j

# I need to fix the working directory, For now I am working interactively
cd $PBS_O_WORKDIR
mkdir "Data_analysis"
cd Data_analysis/
##BASEDIR="/scratch/lo50936/Data_analysis/Nanopore/Data_analysis"

#Raw data must be saved in these files:
#fast5_files/
#fastq_files/

#For basecalling using Guppy (when MinIt is not used)
#module load ont-guppy/3.2.4-CPU
#for i in fast5/*
#do
#  f=$( echo $i )
#guppy_basecaller -i  $f -s /scratch/lo50936/Data_analysis/Nanopore/20190619_Run_1/ --flowcell  FLO-MIN106 --kit SQK-DCS108
#done

#Combine all input reads into a single file (all fastq files)
cat fastq_files/*/*.fastq | gzip > all_reads.fastq.gz

#Demultiplex barcodes, the total reads and barcodes of each sample can be found in the log file
module load Porechop/0.2.4-foss-2016b-Python-3.5.2
porechop -i all_reads.fastq.gz -b Demultiplexed

# Assembly draft genome using Canu (generation of fasta files)
cd Demultiplexed/
module load canu/1.7.1
for i in BC*gz
do
  f=$( echo $i | cut -d"." -f1)
canu -p $f -d $f genomeSize=13k -nanopore-raw $i useGrid=false minReadLength=500 stopOnReadQuality=false
done

#Improve the draft genome using Nanopolish
module load Nanopolish/0.11.1
nanopolish index -d /scratch/lo50936/Data_analysis/Nanopore/Data_analysis/Test3_rep/fast5_files BC04.fastq.gz

#Create an index file that links reads id with their signal-level data in the raw data
module load minimap2/2.17-foss-2018a
module load SAMtools/1.6-foss-2016b #module load SAMtools/1.9-foss-2016b
minimap2 -ax map-ont -t 8 BC04.contigs.fasta BC04.fastq.gz | samtools sort -o reads_BC04.sorted.bam -T reads_BC04.tmp
samtools index reads_BC04.sorted.bam

#Compute a new consensus sequence for the draft genome
grep \> BC04.contigs.fasta | cat | tr -d ">" | tr -d "len=" > contig_list.txt
count=$( grep "tig" contig_list.txt | wc -l); echo $count
for ((i=1;i<$count+1;i++))
do
contig=$( cat contig_list.txt | awk -v f=1 -v h=$i 'FNR == h {print $f}' )
lengh=$( cat contig_list.txt | awk -v f=$i -v h=2 'FNR == f {print $h}' )
nanopolish variants --consensus -o variants_$i.vcf -w "$contig:1-$lengh" -r BC04.fastq.gz -b reads_BC04.sorted.bam -g BC04.contigs.fasta
nanopolish vcf2fasta --skip-checks -g BC04.contigs.fasta variants_$i.vcf > draft_gene_$i.fa
samtools faidx draft_gene_$i.fa "$contig:1-$lengh" > polished_gene_$i.fa
done
cat polished_gene*.fa > final_genome.fa #Esta linea la tengo que modificar para que sea especÃ­fica para bardcode, de lo contrario va a unir todos los archivos que encuentre


module load MUMmer/3.23-foss-2016b

#For Segment 8 of IAV
nucmer PATH/LO-034_final_Seg8.fa polished_01.fa -p segment8
delta-filter -1 segment8.delta > segment8.1delta
mummerplot --size large -fat --color -f --png segment8.1delta -p segment8

#For Segment 7 of IAV
nucmer LO-034_final_Seg7.fa polished_genome_3.fa -p segment7
delta-filter -1 segment7.delta > segment7.1delta
mummerplot --size large -fat --color -f --png segment7.1delta -p segment7

#For Segment 3 of IAV
nucmer LO-034_final_Seg3.fa polished_genome_4.fa -p segment3
delta-filter -1 segment3.delta > segment3.1delta
mummerplot --size large -fat --color -f --png segment3.1delta -p segment3

#For Segment 5 of IAV
nucmer LO-034_final_Seg5.fa polished_genome_5.fa -p segment5
delta-filter -1 segment5.delta > segment5.1delta
mummerplot --size large -fat --color -f --png segment5.1delta -p segment5

#Nanopore quality assesment (done only for the contig 02, using as reference the sequence I got by Illumina)
module load QUAST/5.0.0.dev0-foss-2016b-Python-3.5.2
quast.py LO-034_final_Seg8.fa polished_genome_2.fa
