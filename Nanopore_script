#PBS -S /bin/bash
#PBS -q batch
#PBS -N jobname
#PBS -l nodes=1:ppn=16
#PBS -l walltime=48:00:00
#PBS -l mem=8gb
#PBS --output=log.%j
#PBS --output=/scratch/lo50936/Data_analysis/Nanopore/Data_analysis/log.%j

# I need to fix the working directory, For now I am working interactively
cd $PBS_O_WORKDIR
mkdir "Data_analysis"
cd Data_analysis/
##BASEDIR="/scratch/lo50936/Data_analysis/Nanopore/Data_analysis"

#Combine all input reads into a single file
cat Run2/fastq_pass/*.fastq | gzip > all_reads.fastq.gz

#Demultiplex barcodes, the total reads and barcodes of each sammple can be found in the log file
module load Porechop/0.2.4-foss-2016b-Python-3.5.2
porechop -i all_reads.fastq.gz -b Demultiplexed

# Assembly draft genome using Canu (generation of fasta files)
cd Demultiplexed/
module load canu/1.7.1
for i in BC*gz
do
  f=$( echo $i | cut -d"." -f1)
canu -p $f -d $f genomeSize=13k -nanopore-raw $i useGrid=false minReadLength=500 stopOnReadQuality=false
done

#Improve the draft genome usong Nanopolish, For now I am working only with one sample. When it works well for this sample I will modify the script including all samples
#Index the reads using the raw data (fast5 files and dexultiplexed reads)
module load Nanopolish/0.11.1
nanopolish index -d fast5_pass/ BC04.fastq.gz

#Align the basecalled reads to the draft genome
module load minimap2/2.17-foss-2018a
minimap2 -ax map-ont -t 8 BC04.contigs.fasta BC04.fastq.gz | samtools sort -o reads_2.sorted.bam -T reads_2.tmp
module load SAMtools/1.6-foss-2016b
samtools index reads_2.sorted.bam

grep \> BC04.contigs.fasta
more BC04.contigs.fasta.fai
#Using the previous line I got 5 contigs tig00000002, tig00000005, tig00000010, tig00001152, tig00001153
nanopolish variants --consensus -o polished_2.vcf -w "tig00000002:1-905" -r BC04.fastq.gz -b reads_2.sorted.bam -g BC04.contigs.fasta
nanopolish variants --consensus -o polished_3.vcf -w "tig00000005:1-1018" -r BC04.fastq.gz -b reads_2.sorted.bam -g BC04.contigs.fasta
nanopolish variants --consensus -o polished_4.vcf -w "tig00000010:1-2223" -r BC04.fastq.gz -b reads_2.sorted.bam -g BC04.contigs.fasta
nanopolish variants --consensus -o polished_5.vcf -w "tig00001152:1-1547" -r BC04.fastq.gz -b reads_2.sorted.bam -g BC04.contigs.fasta
nanopolish variants --consensus -o polished_6.vcf -w "tig00001153:1-1560" -r BC04.fastq.gz -b reads_2.sorted.bam -g BC04.contigs.fasta
#For the conting 1152 I got this error (however I got the vcf file): Number of variants in span (12) would exceed max-haplotypes. Variants may be missed. Consider running with a higher value of max-haplotypes!

#generate the polished genome in fasta format
nanopolish vcf2fasta --skip-checks -g BC04.contigs.fasta polished_2.vcf > polished_genome_2.fa
nanopolish vcf2fasta --skip-checks -g BC04.contigs.fasta polished_3.vcf > polished_genome_3.fa
nanopolish vcf2fasta --skip-checks -g BC04.contigs.fasta polished_4.vcf > polished_genome_4.fa
nanopolish vcf2fasta --skip-checks -g BC04.contigs.fasta polished_5.vcf > polished_genome_5.fa
nanopolish vcf2fasta --skip-checks -g BC04.contigs.fasta polished_6.vcf > polished_genome_6.fa

#Aligning the polished sequences with the reference (I used Illumina sequences as reference)
module load MUMmer/3.23-foss-2016b

#For Segment 8 of IAV
nucmer PATH/LO-034_final_Seg8.fa polished_02.fa -p segment8
delta-filter -1 segment8.delta > segment8.1delta
mummerplot --size large -fat --color -f --png segment8.1delta -p segment8

#For Segment 7 of IAV
nucmer LO-034_final_Seg7.fa polished_genome_3.fa -p segment7
delta-filter -1 segment7.delta > segment7.1delta
mummerplot --size large -fat --color -f --png segment7.1delta -p segment7

#For Segment 3 of IAV
nucmer LO-034_final_Seg3.fa polished_genome_4.fa -p segment3
delta-filter -1 segment3.delta > segment3.1delta
mummerplot --size large -fat --color -f --png segment3.1delta -p segment3

#For Segment 5 of IAV
nucmer LO-034_final_Seg5.fa polished_genome_5.fa -p segment5
delta-filter -1 segment5.delta > segment5.1delta
mummerplot --size large -fat --color -f --png segment5.1delta -p segment5
